/*
Question Link :https://www.interviewbit.com/problems/maximum-absolute-difference/
You are given an array of N integers, A1, A2 ,…, AN. Return maximum value of f(i, j) for all 1 ≤ i, j ≤ N.
f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.

For example,

A=[1, 3, -1]

f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5

So, we return 5.
*/

/*  BELOW SOLUTION TAKES O(N)*/

int Solution::maxArr(vector<int> &A)
{
    
    int len = A.size();
    vector<int>v;
    
    for(int i=0;i<len;i++)
    {
        v.push_back(A[i]);
    }
    
    for(int i=0;i<len;i++)
    {
        v[i]=v[i]-i;        
    }
    for(int i=0;i<len;i++)
    {
        A[i]=A[i]+i;         
    }
     
     int max = A[0],min=A[0];
     int max1=v[0],min1=v[0];
    
      for(int i=0;i<len;i++)   // Finding max , min Vector A,v 
      {
          if(max < A[i])
          {
              max = A[i];
          }
          if(min > A[i])
          {
              min=A[i];
          }
          if(max1 < v[i])
          {
              max1 = v[i];
          }
          if(min1 > v[i])
          {
              min1=v[i];
          }
      }
     
    return( (max-min)>(max1-min1) ?(max-min) :(max1-min1) );
}
