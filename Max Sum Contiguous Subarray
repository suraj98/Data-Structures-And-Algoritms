/*
Question Link :https://www.interviewbit.com/problems/max-sum-contiguous-subarray/

Find the contiguous subarray within an array (containing at least one number) which has the largest sum.
For example:
Given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
For this problem, return the maximum sum.

*/

/*
Below  soln is famously known as Kadanes Algorithm.
Time Complexity--->O(n)
Space Complexity--->O(1)
*/

int Solution::maxSubArray(const vector<int> &A)
{
    int len = A.size();
    if(len == 1)
    {
        return A[0];
    }
    int sum = 0 ;
    int max = A[0];
    for(int i=0;i<len;i++)
    {
        sum = sum + A[i] ;
        if( max < sum)
        {
           max = sum;
        }
        if( sum < 0)
        {   sum=0; }
    }
    
    return max ;
}
